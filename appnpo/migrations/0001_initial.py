# Generated by Django 3.1.3 on 2020-11-20 15:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cell_id', models.CharField(max_length=20, verbose_name='小区号')),
                ('cell_name', models.CharField(max_length=100, verbose_name='小区名')),
                ('cell_type', models.CharField(max_length=40, verbose_name='小区类型')),
                ('azimuth', models.IntegerField(verbose_name='方向角')),
            ],
            options={
                'verbose_name': '小区信息',
            },
        ),
        migrations.CreateModel(
            name='WorkSpace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workspace_name', models.CharField(max_length=40, unique=True, verbose_name='工作空间名称')),
                ('workspace_type', models.CharField(choices=[('场景分析', '场景分析')], default='场景分析', max_length=20, verbose_name='工作空间类型')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('time_lastmodify', models.DateTimeField(auto_now=True, verbose_name='最后操作时间')),
                ('time_lastcheck', models.DateTimeField(null=True, verbose_name='最后计算时间')),
                ('status', models.CharField(max_length=20, verbose_name='状态')),
            ],
            options={
                'verbose_name': '工作空间',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100, verbose_name='站址名称')),
                ('site_type', models.CharField(max_length=20, verbose_name='站址类型')),
                ('lng', models.FloatField(verbose_name='经度')),
                ('lat', models.FloatField(verbose_name='纬度')),
                ('is_auto_created', models.BooleanField(default=False, verbose_name='是否自动创建')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.workspace')),
            ],
            options={
                'verbose_name': '站址信息',
                'unique_together': {('lng', 'lat', 'workspace')},
            },
        ),
        migrations.CreateModel(
            name='Scene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scene_id', models.CharField(max_length=40, verbose_name='场景编号')),
                ('scene_name', models.CharField(max_length=100, verbose_name='场景名称')),
                ('scene_type', models.CharField(max_length=20, verbose_name='场景类型')),
                ('region', models.TextField(verbose_name='场景范围')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.workspace')),
            ],
            options={
                'verbose_name': '场景信息',
                'unique_together': {('scene_id', 'workspace')},
            },
        ),
        migrations.CreateModel(
            name='OutdoorSiteNearbyScene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_to_center', models.FloatField(verbose_name='与场景中心距离')),
                ('distance_to_border_far', models.FloatField(verbose_name='与场景边界最远距离')),
                ('distance_to_border_near', models.FloatField(verbose_name='与场景边界最近距离')),
                ('in_scene', models.BooleanField(verbose_name='是否在场景内')),
                ('cover_order', models.IntegerField(default=0, verbose_name='主覆盖站点')),
                ('azimuth', models.IntegerField(default=0, verbose_name='主覆盖方向')),
                ('scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.scene')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.site')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.workspace')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OutdoorCellCoverScene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.cell')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.outdoorsitenearbyscene')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndoorSiteInScene',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scene', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.scene')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.site')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.workspace')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cell',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.site'),
        ),
        migrations.AddField(
            model_name='cell',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appnpo.workspace'),
        ),
        migrations.AlterUniqueTogether(
            name='cell',
            unique_together={('workspace', 'cell_name', 'azimuth', 'site'), ('workspace', 'cell_id', 'azimuth', 'site')},
        ),
    ]
